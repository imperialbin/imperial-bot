datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                       String       @id @default(uuid())
  userId                   Int          @default(autoincrement())
  username                 String       @unique
  email                    String       @unique
  banned                   Boolean      @default(false)
  confirmed                Boolean      @default(false)
  icon                     String       @default("/img/pfp.png")
  password                 String
  memberPlus               Boolean      @default(false)
  documentsMade            Int          @default(0)
  activeUnlimitedDocuments Int          @default(0)
  apiToken                 String       @unique
  discordId                String?      @unique
  admin                    Boolean      @default(false)
  githubAccess             String?
  opt                      String?
  settings                 UserSettings @relation(fields: [userSettingsId], references: [id])
  userSettingsId           String
}

model UserSettings {
  id               String  @id @default(uuid())
  clipboard        Boolean @default(false)
  longUrls         Boolean @default(false)
  shortUrls        Boolean @default(false)
  instantDelete    Boolean @default(false)
  encrypted        Boolean @default(false)
  imageEmbed       Boolean @default(false)
  expiration       Int     @default(5)
  fontLignatures   Boolean @default(false)
  fontSize         Int     @default(14)
  renderWhitespace Boolean @default(false)
  wordWrap         Boolean @default(false)
  tabSize          Int     @default(4)
  createGist       Boolean @default(false)
  User User[]
  @@map("user_settings")
}

model Document {
  id                 String           @unique
  content            String
  creator            String?
  creationDate       DateTime         @default(now())
  expirationDate     DateTime
  settings           DocumentSettings @relation(fields: [documentSettingsId], references: [id], onDelete: Cascade)
  documentSettingsId String
  gist               String?
  views              Int              @default(0)
  encryptedIv        String?
}
// new.ts kk thanks
model DocumentSettings {
  id            String   @id @default(uuid())
  language      String   @default("plaintext")
  imageEmbed    Boolean  @default(false)
  instantDelete Boolean  @default(false)
  encrypted     Boolean  @default(false)
  public        Boolean  @default(false)
  editors       String[]
  Document Document[]
  @@map("document_settings")
}